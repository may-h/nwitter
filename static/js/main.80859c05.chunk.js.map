{"version":3,"sources":["fbase.js","components/AuthForm.js","routes/Auth.js","components/Nweet.js","components/NweetFactory.js","routes/Home.js","routes/Profile.js","components/Navigation.js","components/Router.js","components/App.js","index.js"],"names":["firebase","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","dbService","storageService","AuthForm","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onSubmit","e","a","preventDefault","createUserWithEmailAndPassword","data","signInWithEmailAndPassword","console","log","message","onChange","target","name","value","className","type","placeholder","required","onClick","prev","Auth","onSocialClick","event","provider","auth","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","icon","faTwitter","color","size","style","marginBottom","faGoogle","faGithub","Nweet","nweetObj","isOwner","editing","setEditing","text","newNweet","setNewNweet","onDeleteClick","ok","window","confirm","doc","id","delete","refFromURL","attachmentUrl","toggleEditing","update","autoFocus","src","class","faTrash","faPencilAlt","NweetFactory","userObj","nweet","setNweet","attachment","setAttachment","ref","child","uid","uuidv4","attachmentRef","putString","response","getDownloadURL","createdAt","Date","now","creatorId","collection","add","maxLength","for","faPlus","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","opacity","backgroundImage","faTimes","Home","nweets","setNweets","useEffect","onSnapshot","snapshot","nweetArray","docs","map","marginTop","key","refreshUser","history","useHistory","newDisplayName","setNewDisplayName","getMyNweets","where","get","displayName","updateProfile","signOut","push","Navigation","display","justifyContent","to","marginRight","marginLeft","flexDirection","alignItems","fontSize","faUser","AppRouter","isLoggedIn","maxWidth","width","margin","exact","path","Profile","from","App","init","setInit","setUserObj","onAuthStateChanged","user","args","currentUser","Boolean","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.80859c05.chunk.js","sourcesContent":["import * as firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\nimport \"firebase/storage\";\n\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  databaseURL: process.env.REACT_APP_DATABASE_URL,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGEIN_ID,\n  appId: process.env.REACT_APP_APP_ID,\n};\n\n// export default firebase.initializeApp(firebaseConfig);\nfirebase.initializeApp(firebaseConfig);\nexport const firebaseInstance = firebase;\n\nexport const authService = firebase.auth();\nexport const dbService = firebase.firestore();\nexport const storageService = firebase.storage();\n","import React from \"react\";\nimport { useState } from \"react\";\nimport { authService } from \"fbase\";\n\nconst AuthForm = () => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [newAccount, setNewAccount] = useState(true);\n  const [error, setError] = useState(\"\");\n\n  const toggleAccount = () => setNewAccount((prev) => !prev);\n\n  const onSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      let data;\n      if (newAccount) {\n        data = await authService.createUserWithEmailAndPassword(\n          email,\n          password\n        );\n      } else {\n        data = await authService.signInWithEmailAndPassword(email, password);\n      }\n      console.log(data);\n    } catch (error) {\n      setError(error.message);\n    }\n  };\n\n  const onChange = (e) => {\n    const {\n      target: { name, value },\n    } = e;\n    if (name === \"email\") {\n      setEmail(value);\n    } else if (name === \"password\") {\n      setPassword(value);\n    }\n  };\n  return (\n    <>\n      <form onSubmit={onSubmit} className=\"container\">\n        <input\n          type=\"email\"\n          name=\"email\"\n          placeholder=\"Email\"\n          onChange={onChange}\n          value={email}\n          required\n          className=\"authInput\"\n        />\n        <input\n          type=\"password\"\n          name=\"password\"\n          placeholder=\"Password\"\n          onChange={onChange}\n          value={password}\n          required\n          className=\"authInput\"\n        />\n        <input\n          type=\"submit\"\n          className=\"authInput authSubmit\"\n          value={newAccount ? \"Create Account\" : \"Log In\"}\n        />\n        {error && <span className=\"authError\">{error}</span>}\n      </form>\n      <span onClick={toggleAccount} className=\"authSwitch\">\n        {newAccount ? \"Sign In\" : \"Create Account\"}\n      </span>\n    </>\n  );\n};\n\nexport default AuthForm;\n","import { authService, firebaseInstance } from \"fbase\";\nimport React from \"react\";\nimport AuthForm from \"../components/AuthForm\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faTwitter,\n  faGoogle,\n  faGithub,\n} from \"@fortawesome/free-brands-svg-icons\";\n\nconst Auth = () => {\n  const onSocialClick = async (event) => {\n    const {\n      target: { name },\n    } = event;\n    let provider;\n    if (name === \"google\") {\n      provider = new firebaseInstance.auth.GoogleAuthProvider();\n    } else if (name === \"github\") {\n      provider = new firebaseInstance.auth.GithubAuthProvider();\n    }\n\n    const data = await authService.signInWithPopup(provider);\n    console.log(data);\n  };\n\n  return (\n    <div className=\"authContainer\">\n      <FontAwesomeIcon\n        icon={faTwitter}\n        color={\"#04AAFF\"}\n        size=\"3x\"\n        style={{ marginBottom: 30 }}\n      />\n      <AuthForm />\n      <div className=\"authBtns\">\n        <button onClick={onSocialClick} name=\"google\" className=\"authBtn\">\n          Continue with Google <FontAwesomeIcon icon={faGoogle} />\n        </button>\n        <button onClick={onSocialClick} name=\"github\" className=\"authBtn\">\n          Continue with Github <FontAwesomeIcon icon={faGithub} />\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Auth;\n","import { dbService, storageService } from \"fbase\";\nimport React, { useState } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\n\nconst Nweet = ({ nweetObj, isOwner }) => {\n  const [editing, setEditing] = useState(false);\n  const [newNweet, setNewNweet] = useState(nweetObj.text);\n\n  const onDeleteClick = async () => {\n    const ok = window.confirm(\"Are you sure you wnat to delete this nweet?\");\n    console.log(ok);\n    if (ok) {\n      //delete nweet\n      await dbService.doc(`nweets/${nweetObj.id}`).delete(); //delete nweet\n      await storageService.refFromURL(nweetObj.attachmentUrl).delete(); //delete photo\n    }\n  };\n\n  const toggleEditing = () => setEditing((prev) => !prev);\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    await dbService.doc(`nweets/${nweetObj.id}`).update({\n      text: newNweet,\n    });\n    setEditing(false);\n  };\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n\n    setNewNweet(value);\n  };\n  return (\n    <div className=\"nweet\">\n      {editing ? (\n        <>\n          <form onSubmit={onSubmit} className=\"container nweetEdit\">\n            <input\n              type=\"text\"\n              placeholder=\"Edit your nweet\"\n              value={newNweet}\n              required\n              autoFocus\n              onChange={onChange}\n              className=\"formInput\"\n            />\n            <input type=\"submit\" value=\"Update Nweet\" className=\"formBtn\" />\n          </form>\n          <span onClick={toggleEditing} className=\"formBtn cancelBtn\">\n            Cancel\n          </span>\n        </>\n      ) : (\n        <>\n          <h4>{nweetObj.text}</h4>\n          {nweetObj.attachmentUrl && <img src={nweetObj.attachmentUrl} />}\n          {isOwner && (\n            <div class=\"nweet__actions\">\n              <span onClick={onDeleteClick}>\n                <FontAwesomeIcon icon={faTrash} />\n              </span>\n              <span onClick={toggleEditing}>\n                <FontAwesomeIcon icon={faPencilAlt} />\n              </span>\n            </div>\n          )}\n        </>\n      )}\n    </div>\n  );\n};\nexport default Nweet;\n","import React, { useState } from \"react\";\nimport { storageService, dbService } from \"../fbase\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\n\nconst NweetFactory = ({ userObj }) => {\n  const [nweet, setNweet] = useState(\"\");\n  const [attachment, setAttachment] = useState(\"\");\n\n  const onSubmit = async (event) => {\n    if (nweet === \"\") {\n      return;\n    }\n    event.preventDefault();\n    let attachmentUrl = \"\";\n    if (attachment !== \"\") {\n      //사진 첨부 안할 수 도 있으니까.\n      const attachmentRef = await storageService\n        .ref()\n        .child(`${userObj.uid}/${uuidv4()}`); //랜덤이름을 만들고자 npm install uuid 해줌.\n      const response = await attachmentRef.putString(attachment, \"data_url\"); //실제 업로드.\n      attachmentUrl = await response.ref.getDownloadURL();\n    }\n    const nweetObj = {\n      text: nweet,\n      createdAt: Date.now(),\n      creatorId: userObj.uid,\n      attachmentUrl,\n    };\n\n    await dbService.collection(\"nweets\").add(nweetObj);\n    setNweet(\"\");\n    setAttachment(\"\");\n  };\n\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setNweet(value);\n  };\n\n  const onFileChange = (event) => {\n    //console.log(event.target.files);\n    const {\n      target: { files },\n    } = event;\n    const theFile = files[0];\n\n    const reader = new FileReader(); //파일을 읽어주는 API\n    reader.onloadend = (finishedEvent) => {\n      //2. 읽는데 시간이 걸려서 다 읽으면 이벤트리스너 호출\n      console.log(finishedEvent);\n      const {\n        currentTarget: { result },\n      } = finishedEvent;\n      setAttachment(result);\n    };\n    reader.readAsDataURL(theFile); //1. 읽기 시작하고\n  };\n\n  const onClearAttachment = () => setAttachment(\"\");\n\n  return (\n    <form onSubmit={onSubmit} className=\"factoryForm\">\n      <div className=\"factoryInput__container\">\n        <input\n          className=\"factoryInput__input\"\n          value={nweet}\n          onChange={onChange}\n          type=\"text\"\n          placeholder=\"What's on your mind?\"\n          maxLength={120}\n        />\n        <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput__arrow\" />\n      </div>\n      <label for=\"attach-file\" className=\"factoryInput__label\">\n        <span>Add photos</span>\n        <FontAwesomeIcon icon={faPlus} />\n      </label>\n      <input\n        id=\"attach-file\"\n        type=\"file\"\n        accept=\"image/*\"\n        onChange={onFileChange}\n        style={{\n          opacity: 0,\n        }}\n      />\n\n      {attachment && (\n        <div className=\"factoryForm__attachment\">\n          <img\n            src={attachment}\n            style={{\n              backgroundImage: attachment,\n            }}\n          />\n          <div className=\"factoryForm__clear\" onClick={onClearAttachment}>\n            <span>Remove</span>\n            <FontAwesomeIcon icon={faTimes} />\n          </div>\n        </div>\n      )}\n    </form>\n  );\n};\n\nexport default NweetFactory;\n","import { dbService } from \"fbase\";\nimport React, { useEffect, useState } from \"react\";\nimport Nweet from \"../components/Nweet\";\nimport NweetFactory from \"components/NweetFactory\";\n\nconst Home = ({ userObj }) => {\n  // 5. home에서 userObje를 받는다.\n  const [nweets, setNweets] = useState([]);\n\n  // 이전 방식의 get\n  //   const getNweets = async () => {\n  //     const dbNweets = await dbService.collection(\"nweets\").get(); // get() gives us QueryDocumentSnapshot\n  //     dbNweets.forEach((doc) => {\n  //       const nweetObject = {\n  //         ...doc.data(),\n  //         id: doc.id,\n  //       };\n  //       setNweets((prev) => [nweetObject, ...prev]); //setXXX 메서드에 인자값을 받으면, 갖고 있는 현재(혹은 이전)데이터를 넘겨 받을 수 있다.\n  //     });\n  //   };\n\n  useEffect(() => {\n    // getNweets(); ->옛날 방식... oonSnapshot을 사용하자 (query 대신에 snapshot을 사용)\n    //onSnapshot을 사용하면 re-render하지 않는다. 한번에 가져온다.\n    dbService.collection(\"nweets\").onSnapshot((snapshot) => {\n      //실시간!!!\n      //read, create, delete, update 할때마다\n      const nweetArray = snapshot.docs.map((doc) => ({\n        id: doc.id,\n        ...doc.data(),\n      }));\n      setNweets(nweetArray);\n    });\n  }, []);\n\n  return (\n    <div className=\"container\">\n      <NweetFactory userObj={userObj} />\n      <div style={{ marginTop: 30 }}>\n        {nweets.map((nweet) => (\n          <Nweet\n            key={nweet.id}\n            nweetObj={nweet}\n            isOwner={nweet.creatorId === userObj.uid}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\nexport default Home;\n","import { authService, dbService } from \"fbase\";\nimport React, { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nexport default ({ userObj, refreshUser }) => {\n  const history = useHistory();\n  const [newDisplayName, setNewDisplayName] = useState(userObj.newDisplayName);\n\n  const onLogOutClick = () => {\n    authService.signOut();\n    history.push(\"/\");\n    refreshUser();\n  };\n\n  const getMyNweets = async () => {\n    const nweets = await dbService\n      .collection(\"nweets\")\n      .where(\"creatorId\", \"==\", userObj.uid) //filtering\n      // .orderBy(\"createdAt\")\n      .get();\n    console.log(nweets.docs.map((doc) => doc.data()));\n  };\n\n  useEffect(() => {\n    getMyNweets();\n  }, []);\n\n  const onSubmit = async (e) => {\n    e.preventDefault();\n    if (userObj.displayName !== newDisplayName) {\n      await userObj.updateProfile({\n        displayName: newDisplayName,\n      });\n    }\n\n    refreshUser();\n    setNewDisplayName(\"\");\n  };\n\n  const onChange = (e) => {\n    const {\n      target: { value },\n    } = e;\n    setNewDisplayName(value);\n  };\n\n  return (\n    <div className=\"container\">\n      <form onSubmit={onSubmit} className=\"profileForm\">\n        <input\n          type=\"text\"\n          placeholder=\"Display name\"\n          value={newDisplayName}\n          onChange={onChange}\n          autoFocus\n          className=\"formInput\"\n        />\n        <input\n          type=\"submit\"\n          value=\"Update Profile\"\n          className=\"formBtn\"\n          style={{\n            marginTop: 10,\n          }}\n        />\n      </form>\n      <span className=\"formBtn cancelBtn logOut\" onClick={onLogOutClick}>\n        Log Out\n      </span>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\n\nconst Navigation = ({ userObj }) => (\n  <nav>\n    <ul style={{ display: \"flex\", justifyContent: \"center\", marginTop: 50 }}>\n      <li>\n        <Link to=\"/\" style={{ marginRight: 10 }}>\n          <FontAwesomeIcon icon={faTwitter} color={\"#04AAFF\"} size=\"2x\" />\n        </Link>\n      </li>\n      <li>\n        <Link\n          to=\"/profile\"\n          style={{\n            marginLeft: 10,\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\",\n            fontSize: 12,\n          }}\n        >\n          <FontAwesomeIcon icon={faUser} color={\"#04AAFF\"} size=\"2x\" />\n          <span style={{ marginTop: 10 }}>\n            {userObj.displayName\n              ? `${userObj.displayName}의 Profile`\n              : \"Profile\"}\n          </span>\n        </Link>\n      </li>\n    </ul>\n  </nav>\n);\nexport default Navigation;\n","import React from \"react\";\nimport {\n  HashRouter as Router,\n  Redirect,\n  Route,\n  Switch,\n} from \"react-router-dom\";\nimport Auth from \"../routes/Auth\";\nimport Home from \"../routes/Home\";\nimport Profile from \"../routes/Profile\";\nimport Navigation from \"components/Navigation\";\n\nconst AppRouter = ({ isLoggedIn, userObj, refreshUser }) => {\n  //3. userObj를 받아서 Home에 넘겨준다.\n  return (\n    <Router>\n      {isLoggedIn && <Navigation userObj={userObj} />}\n      <Switch>\n        {isLoggedIn ? (\n          <div\n            style={{\n              maxWidth: 890,\n              width: \"100%\",\n              margin: \"0 auto\",\n              marginTop: 80,\n              display: \"flex\",\n              justifyContent: \"center\",\n            }}\n          >\n            <Route exact path=\"/\">\n              <Home userObj={userObj} />\n            </Route>\n            <Route exact path=\"/profile\">\n              <Profile userObj={userObj} refreshUser={refreshUser} />\n            </Route>\n          </div>\n        ) : (\n          <>\n            <Route exact path=\"/\">\n              <Auth />\n            </Route>\n            <Redirect from=\"*\" to=\"/\" />\n          </>\n        )}\n      </Switch>\n    </Router>\n  );\n};\n\nexport default AppRouter;\n","import React, { useEffect, useState } from \"react\";\nimport AppRouter from \"components/Router\";\nimport { authService } from \"fbase\";\nimport { auth } from \"firebase\";\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [userObj, setUserObj] = useState(null); //다른 곳에서도 쓰일 수 있는 데이터는 on top 에 있는게 좋다. 그래야 라우터로 보내고 컴포넌트로 보낼 수 있으니까~\n\n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      if (user) {\n        setUserObj({\n          displayName: user.displayName,\n          uid: user.uid,\n          updateProfile: (args) => user.updateProfile(args),\n        }); // 1.로그인되면 userObj에 set해준다.\n      } else {\n        setUserObj(null);\n      }\n      setInit(true);\n    });\n  }, []);\n\n  const refreshUser = () => {\n    const user = authService.currentUser;\n    setUserObj({\n      displayName: user.displayName,\n      uid: user.uid,\n      updateProfile: (args) => user.updateProfile(args),\n    });\n  };\n  return (\n    <>\n      {init ? (\n        <AppRouter\n          refreshUser={refreshUser}\n          isLoggedIn={Boolean(userObj)}\n          userObj={userObj}\n        /> //2. userObj가 router로 넘겨진다.\n      ) : (\n        \"Initializing...\"\n      )}\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport \"./styles.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}